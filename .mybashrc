#!/bin/bash

# Show current git branch name
parse_git_branch() {
    REPO=$(git rev-parse --show-toplevel 2> /dev/null)
    if [ "$REPO" != "$HOME" ]
    then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
    fi
}
export PS1="\u@\h \[\033[32m\]\w\[\033[33m\]\$(parse_git_branch)\[\033[00m\] $ "

alias vimconflict='vim `git ls-files --modified | uniq`'
alias gitchangelog='git log `git describe --all --abbrev=0`..HEAD --oneline | sed "s/\w* //" | sort | cat'
